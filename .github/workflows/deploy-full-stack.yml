name: Deploy Full Stack Application

on:
  push:
    branches: [main]
    paths-ignore: ['README.md', '.gitignore', 'docs/**']
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  deploy-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Deploy Backend to HF Spaces
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          # Setup git config
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
          # Create temporary directory for HF deployment
          mkdir -p hf-deploy
          cp -r backend/* hf-deploy/ 2>/dev/null || true
          cd hf-deploy
          
          # Initialize git with main branch (fix branch issue)
          git init
          git branch -M main
          git remote add hf https://Xendaine99:$HF_TOKEN@huggingface.co/spaces/Xendaine99/xeno-crm-backend
          git add .
          git commit -m "Full-stack deployment: Backend ${{ github.sha }}" || echo "No changes to commit"
          git push --force hf main

      - name: Wait for backend deployment
        run: |
          echo "‚è≥ Waiting for backend deployment..."
          sleep 90

  deploy-frontend:
    needs: [detect-changes, deploy-backend]
    if: always() && (needs.detect-changes.outputs.frontend == 'true' || needs.deploy-backend.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Install and Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          cd frontend
          npx vercel pull --yes --environment=production --token $VERCEL_TOKEN || echo "Initial setup"
          npx vercel build --prod --token $VERCEL_TOKEN
          npx vercel deploy --prebuilt --prod --token $VERCEL_TOKEN

  test-integration:
    needs: [deploy-backend, deploy-frontend]
    if: always() && (needs.deploy-backend.result == 'success' || needs.deploy-frontend.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Test Backend Health
        run: |
          echo "üß™ Testing backend health..."
          curl -f https://xendaine99-xeno-crm-backend.hf.space/health || echo "‚ö†Ô∏è Backend health check failed"
          curl -f https://xendaine99-xeno-crm-backend.hf.space/api/test || echo "‚ö†Ô∏è Backend API test failed"

      - name: Test Frontend
        run: |
          echo "üß™ Testing frontend..."
          curl -I https://frontend-ix7tjnt2l-chaitanya-jayants-projects.vercel.app || echo "‚ö†Ô∏è Frontend check failed"

  notify-completion:
    needs: [deploy-backend, deploy-frontend, test-integration]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "üöÄ Full Stack Deployment Complete!"
          echo ""
          echo "üìä Deployment Status:"
          echo "Backend: ${{ needs.deploy-backend.result }}"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"
          echo "Integration Tests: ${{ needs.test-integration.result }}"
          echo ""
          echo "üåê Live URLs:"
          echo "Backend API: https://xendaine99-xeno-crm-backend.hf.space"
          echo "Frontend App: https://frontend-ix7tjnt2l-chaitanya-jayants-projects.vercel.app"
          echo ""
          echo "üîç Health Checks:"
          echo "Backend Health: https://xendaine99-xeno-crm-backend.hf.space/health"
          echo "Backend API Test: https://xendaine99-xeno-crm-backend.hf.space/api/test"
